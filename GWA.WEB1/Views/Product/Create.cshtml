@model  IdentitySample.Models.LoginViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <h4 class="m_bottom_20 color_dark">Add a product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            @Html.LabelFor(model => model.prodVM.Name, htmlAttributes: new { @class = "m_bottom_5 d_inline_b" })
            @Html.EditorFor(model => model.prodVM.Name, new { htmlAttributes = new { @class = "r_corners full_width" } })
            @Html.ValidationMessageFor(model => model.prodVM.Name, "", new { @class = "text-danger" })

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.prodVM.CategoryId, htmlAttributes: new { @class = " m_bottom_5 d_inline_b " })
            <br />
            @Html.DropDownListFor(model => model.prodVM.CategoryId, Model.prodVM.Category, "-- -- Please Select -- --", new { htmlAttributes = new { @class = "r_corners full_width" } })
            @Html.ValidationMessageFor(model => model.prodVM.CategoryId)

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.prodVM.reference, htmlAttributes: new { @class = "m_bottom_5 d_inline_b" })

            @Html.EditorFor(model => model.prodVM.reference, new { htmlAttributes = new { @class = "r_corners full_width" } })
            @Html.ValidationMessageFor(model => model.prodVM.reference, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prodVM.CurrentPrice, htmlAttributes: new { @class = "m_bottom_5 d_inline_b" })

            @Html.EditorFor(model => model.prodVM.CurrentPrice, new { htmlAttributes = new { @class = "r_corners full_width" } })
            @Html.ValidationMessageFor(model => model.prodVM.CurrentPrice, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prodVM.ImageUrl, htmlAttributes: new { @class = "m_bottom_5 d_inline_b" })
            <br />
            @Html.TextBox("Image", null, new { type = "file" })
            @Html.ValidationMessageFor(model => model.prodVM.ImageUrl)

        </div>



        <br />
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="button_type_4 tr_all_hover r_corners f_left bg_scheme_color color_light f_mxs_none m_mxs_bottom_15" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
